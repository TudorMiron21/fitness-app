{"version":3,"file":"websocketClient.browser.js","sourceRoot":"","sources":["../../../src/websocket/websocketClient.browser.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAKlC,MAAM,OAAO,eAAe;IAG1B,YAAmB,GAAW,EAAE,YAAoB;QAClD,IAAI,CAAC,OAAO,GAAG,IAAI,SAAS,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;QAChD,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,aAAa,CAAC;IAC1C,CAAC;IAED,MAAM,CAAC,EAAc;QACnB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED,OAAO,CAAC,EAA0C;QAChD,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,EAAc,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;IACpE,CAAC;IAED,OAAO,CAAC,EAAwB;QAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,EAAS,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED,SAAS,CAAC,EAA4D;QACpE,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,KAAmB,EAAE,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACnE,CAAC;IAED,KAAK,CAAC,IAAa,EAAE,MAAe;QAClC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACnC,CAAC;IAED,6EAA6E;IAC7E,IAAI,CAAC,IAAS,EAAE,CAAmB;QACjC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,CAAC;gBACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACxB,OAAO,EAAE,CAAC;YACZ,CAAC;YAAC,OAAO,GAAG,EAAE,CAAC;gBACb,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,SAAS,CAAC,IAAI,CAAC;IACpD,CAAC;CACF;AAED,MAAM,OAAO,sBAAsB;IAC1B,MAAM,CAAC,GAAW,EAAE,YAAoB;QAC7C,OAAO,IAAI,eAAe,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;IAChD,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { WebSocketClientFactoryLike, WebSocketClientLike } from \"./websocketClientLike\";\n\nexport class WebSocketClient implements WebSocketClientLike {\n  private _socket: WebSocket;\n\n  public constructor(uri: string, protocolName: string) {\n    this._socket = new WebSocket(uri, protocolName);\n    this._socket.binaryType = \"arraybuffer\";\n  }\n\n  onopen(fn: () => void): void {\n    this._socket.onopen = fn;\n  }\n\n  onclose(fn: (code: number, reason: string) => void): void {\n    this._socket.onclose = (ev: CloseEvent) => fn(ev.code, ev.reason);\n  }\n\n  onerror(fn: (error: any) => void): void {\n    this._socket.onerror = (ev: Event) => fn(ev);\n  }\n\n  onmessage(fn: (data: string | Buffer | ArrayBuffer | Buffer[]) => void): void {\n    this._socket.onmessage = (event: MessageEvent) => fn(event.data);\n  }\n\n  close(code?: number, reason?: string): void {\n    this._socket.close(code, reason);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  send(data: any, _?: AbortSignalLike): Promise<void> {\n    return new Promise((resolve, reject) => {\n      try {\n        this._socket.send(data);\n        resolve();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  isOpen(): boolean {\n    return this._socket.readyState === WebSocket.OPEN;\n  }\n}\n\nexport class WebSocketClientFactory implements WebSocketClientFactoryLike {\n  public create(uri: string, protocolName: string): WebSocketClient {\n    return new WebSocketClient(uri, protocolName);\n  }\n}\n"]}