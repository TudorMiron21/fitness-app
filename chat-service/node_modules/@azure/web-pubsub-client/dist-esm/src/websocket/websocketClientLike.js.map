{"version":3,"file":"websocketClientLike.js","sourceRoot":"","sources":["../../../src/websocket/websocketClientLike.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\n\nexport interface WebSocketClientLike {\n  onclose(fn: (code: number, reason: string) => void): void;\n  onerror(fn: (error: any) => void): void;\n  onmessage(fn: (data: string | Buffer | ArrayBuffer | Buffer[]) => void): void;\n  onopen(fn: () => void): void;\n  /** Closes the WebSocket connection, optionally using code as the the WebSocket connection close code and reason as the the WebSocket connection close reason. */\n  close(code?: number, reason?: string): void;\n  /** Transmits data using the WebSocket connection. data can be a string, a Blob, an ArrayBuffer, or an ArrayBufferView. */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  send(data: any, _?: AbortSignalLike): Promise<void>;\n  isOpen(): boolean;\n}\n\nexport interface WebSocketClientFactoryLike {\n  create(uri: string, protocolName: string): WebSocketClientLike;\n}\n"]}