{"version":3,"file":"abortablePromise.js","sourceRoot":"","sources":["../../../src/utils/abortablePromise.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EAAE,UAAU,EAAmB,MAAM,yBAAyB,CAAC;AAEtE,MAAM,CAAC,KAAK,UAAU,gBAAgB,CACpC,OAAmB,EACnB,MAAuB;IAEvB,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;QACnB,MAAM,IAAI,UAAU,CAAC,4BAA4B,CAAC,CAAC;IACrD,CAAC;IAED,IAAI,OAAmB,CAAC;IACxB,+CAA+C;IAC/C,MAAM,CAAC,GAAG,IAAI,OAAO,CAAI,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE;QACrC,OAAO,GAAG,GAAS,EAAE;YACnB,MAAM,CAAC,IAAI,UAAU,CAAC,4BAA4B,CAAC,CAAC,CAAC;QACvD,CAAC,CAAC;QAEF,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC;QACH,OAAO,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC;YAAS,CAAC;QACT,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,OAAQ,CAAC,CAAC;IAChD,CAAC;AACH,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortError, AbortSignalLike } from \"@azure/abort-controller\";\n\nexport async function abortablePromise<T>(\n  promise: Promise<T>,\n  signal: AbortSignalLike,\n): Promise<T> {\n  if (signal.aborted) {\n    throw new AbortError(\"The operation was aborted.\");\n  }\n\n  let onAbort: () => void;\n  // eslint-disable-next-line promise/param-names\n  const p = new Promise<T>((_, reject) => {\n    onAbort = (): void => {\n      reject(new AbortError(\"The operation was aborted.\"));\n    };\n\n    signal.addEventListener(\"abort\", onAbort);\n  });\n\n  try {\n    return await Promise.race([promise, p]);\n  } finally {\n    signal.removeEventListener(\"abort\", onAbort!);\n  }\n}\n"]}