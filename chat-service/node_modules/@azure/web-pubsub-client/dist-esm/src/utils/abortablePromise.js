// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
import { AbortError } from "@azure/abort-controller";
export async function abortablePromise(promise, signal) {
    if (signal.aborted) {
        throw new AbortError("The operation was aborted.");
    }
    let onAbort;
    // eslint-disable-next-line promise/param-names
    const p = new Promise((_, reject) => {
        onAbort = () => {
            reject(new AbortError("The operation was aborted."));
        };
        signal.addEventListener("abort", onAbort);
    });
    try {
        return await Promise.race([promise, p]);
    }
    finally {
        signal.removeEventListener("abort", onAbort);
    }
}
//# sourceMappingURL=abortablePromise.js.map