{"version":3,"file":"testWebSocketClient.js","sourceRoot":"","sources":["../../test/testWebSocketClient.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAGlC,OAAO,YAAY,MAAM,QAAQ,CAAC;AAOlC,MAAM,OAAO,mBAAmB;IAK9B,YAAY,MAAuB;QAJlB,aAAQ,GAAiB,IAAI,YAAY,EAAE,CAAC;QAEtD,aAAQ,GAAG,CAAC,CAAC;QAGlB,MAAM,CAAC,4BAA4B,CAAC,GAAG,GAA+B,EAAE;YACtE,OAAO;gBACL,MAAM,EAAE,CAAC,CAAS,EAAE,EAAU,EAAE,EAAE,CAAC,IAAI;aACxC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,OAAO,CAAC,EAA0C;QAChD,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IAChC,CAAC;IACD,OAAO,CAAC,EAAwB;QAC9B,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IAChC,CAAC;IACD,SAAS,CAAC,EAAuB;QAC/B,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;QAC5C,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACpC,CAAC;IACD,MAAM,CAAC,EAAc;QACnB,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IAC/B,CAAC;IACD,KAAK,CAAC,IAAwB,EAAE,EAAuB;QACrD,IAAI,CAAC,WAAW,CAAC,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAI,IAAI,CAAC,CAAC;IACjC,CAAC;IACD,6EAA6E;IAC7E,IAAI,CAAC,CAAM,EAAE,EAAgC;QAC3C,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IACD,MAAM;QACJ,OAAO,IAAI,CAAC;IACd,CAAC;IACD,UAAU;QACR,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;IACD,WAAW,CAAC,IAAY;QACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACpC,CAAC;IACD,6EAA6E;IAC7E,aAAa,CAAC,IAAS;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACtC,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport EventEmitter from \"events\";\nimport { WebPubSubClient } from \"../src/webPubSubClient\";\nimport {\n  WebSocketClientFactoryLike,\n  WebSocketClientLike,\n} from \"../src/websocket/websocketClientLike\";\n\nexport class TestWebSocketClient implements WebSocketClientLike {\n  private readonly _emitter: EventEmitter = new EventEmitter();\n\n  public openTime = 0;\n\n  constructor(client: WebPubSubClient) {\n    client[\"_getWebSocketClientFactory\"] = (): WebSocketClientFactoryLike => {\n      return {\n        create: (_: string, __: string) => this,\n      };\n    };\n  }\n\n  onclose(fn: (code: number, reason: string) => void): void {\n    this._emitter.removeAllListeners(\"close\");\n    this._emitter.on(\"close\", fn);\n  }\n  onerror(fn: (error: any) => void): void {\n    this._emitter.removeAllListeners(\"error\");\n    this._emitter.on(\"error\", fn);\n  }\n  onmessage(fn: (data: any) => void): void {\n    this._emitter.removeAllListeners(\"message\");\n    this._emitter.on(\"message\", fn);\n    this.openTime = this.openTime + 1;\n  }\n  onopen(fn: () => void): void {\n    this._emitter.removeAllListeners(\"open\");\n    this._emitter.on(\"open\", fn);\n  }\n  close(code: number | undefined, __?: string | undefined): void {\n    this.invokeclose(code ?? 1000);\n  }\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  send(_: any, __?: AbortSignalLike | undefined): Promise<void> {\n    return Promise.resolve();\n  }\n  isOpen(): boolean {\n    return true;\n  }\n  invokeopen(): void {\n    this._emitter.emit(\"open\");\n  }\n  invokeclose(code: number): void {\n    this._emitter.emit(\"close\", code);\n  }\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  invokemessage(data: any): void {\n    this._emitter.emit(\"message\", data);\n  }\n}\n"]}