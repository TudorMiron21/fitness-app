// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
import EventEmitter from "events";
export class TestWebSocketClient {
    constructor(client) {
        this._emitter = new EventEmitter();
        this.openTime = 0;
        client["_getWebSocketClientFactory"] = () => {
            return {
                create: (_, __) => this,
            };
        };
    }
    onclose(fn) {
        this._emitter.removeAllListeners("close");
        this._emitter.on("close", fn);
    }
    onerror(fn) {
        this._emitter.removeAllListeners("error");
        this._emitter.on("error", fn);
    }
    onmessage(fn) {
        this._emitter.removeAllListeners("message");
        this._emitter.on("message", fn);
        this.openTime = this.openTime + 1;
    }
    onopen(fn) {
        this._emitter.removeAllListeners("open");
        this._emitter.on("open", fn);
    }
    close(code, __) {
        this.invokeclose(code !== null && code !== void 0 ? code : 1000);
    }
    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
    send(_, __) {
        return Promise.resolve();
    }
    isOpen() {
        return true;
    }
    invokeopen() {
        this._emitter.emit("open");
    }
    invokeclose(code) {
        this._emitter.emit("close", code);
    }
    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
    invokemessage(data) {
        this._emitter.emit("message", data);
    }
}
//# sourceMappingURL=testWebSocketClient.js.map