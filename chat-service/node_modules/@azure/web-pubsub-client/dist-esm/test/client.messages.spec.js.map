{"version":3,"file":"client.messages.spec.js","sourceRoot":"","sources":["../../test/client.messages.spec.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { assert } from \"@azure/test-utils\";\nimport sinon from \"sinon\";\nimport {\n  DisconnectedMessage,\n  GroupDataMessage,\n  JoinGroupMessage,\n  JoinGroupOptions,\n  LeaveGroupMessage,\n  LeaveGroupOptions,\n  SendEventMessage,\n  SendToGroupMessage,\n  ServerDataMessage,\n} from \"../src/models\";\nimport { WebPubSubClient } from \"../src/webPubSubClient\";\n\ndescribe(\"WebPubSubClient\", function () {\n  describe(\"Execute operation and translate to WebPubSubMessage\", () => {\n    it(\"join group without ack id\", () => {\n      assert.doesNotThrow(() => {\n        const client = new WebPubSubClient(\"wss://service.com\");\n        const mock = sinon.mock(client);\n        mock\n          .expects(\"_sendMessage\")\n          .once()\n          .withArgs({ kind: \"joinGroup\", group: \"groupName\", ackId: 1 } as JoinGroupMessage)\n          .callsFake((_) => Promise.resolve());\n        client.joinGroup(\"groupName\");\n        mock.verify();\n      });\n    });\n\n    it(\"join group with ack id\", () => {\n      assert.doesNotThrow(() => {\n        const client = new WebPubSubClient(\"wss://service.com\");\n        const mock = sinon.mock(client);\n        mock\n          .expects(\"_sendMessage\")\n          .once()\n          .withArgs({ kind: \"joinGroup\", group: \"groupName\", ackId: 2233 } as JoinGroupMessage)\n          .callsFake((_) => Promise.resolve());\n        client.joinGroup(\"groupName\", { ackId: 2233 } as JoinGroupOptions);\n        mock.verify();\n      });\n    });\n\n    it(\"leave group without ack id\", () => {\n      assert.doesNotThrow(() => {\n        const client = new WebPubSubClient(\"wss://service.com\");\n        const mock = sinon.mock(client);\n        mock\n          .expects(\"_sendMessage\")\n          .once()\n          .withArgs({ kind: \"leaveGroup\", group: \"groupName\", ackId: 1 } as LeaveGroupMessage)\n          .callsFake((_) => Promise.resolve());\n        client.leaveGroup(\"groupName\");\n        mock.verify();\n      });\n    });\n\n    it(\"leave group with ack id\", () => {\n      assert.doesNotThrow(() => {\n        const client = new WebPubSubClient(\"wss://service.com\");\n        const mock = sinon.mock(client);\n        mock\n          .expects(\"_sendMessage\")\n          .once()\n          .withArgs({ kind: \"leaveGroup\", group: \"groupName\", ackId: 2233 } as LeaveGroupMessage)\n          .callsFake((_) => Promise.resolve());\n        client.leaveGroup(\"groupName\", { ackId: 2233 } as LeaveGroupOptions);\n        mock.verify();\n      });\n    });\n\n    it(\"send to group fire and forget\", () => {\n      assert.doesNotThrow(() => {\n        const client = new WebPubSubClient(\"wss://service.com\");\n        const mock = sinon.mock(client);\n        mock\n          .expects(\"_sendMessage\")\n          .once()\n          .withArgs({\n            kind: \"sendToGroup\",\n            group: \"groupName\",\n            dataType: \"text\",\n            data: \"xyz\",\n            noEcho: false,\n          } as SendToGroupMessage)\n          .callsFake((_) => Promise.resolve());\n        client.sendToGroup(\"groupName\", \"xyz\", \"text\", {\n          fireAndForget: true,\n        });\n        mock.verify();\n      });\n    });\n\n    it(\"send to group with assigned ack id\", () => {\n      assert.doesNotThrow(() => {\n        const client = new WebPubSubClient(\"wss://service.com\");\n        const mock = sinon.mock(client);\n        mock\n          .expects(\"_sendMessage\")\n          .once()\n          .withArgs({\n            kind: \"sendToGroup\",\n            group: \"groupName\",\n            dataType: \"text\",\n            ackId: 2233,\n            data: \"xyz\",\n            noEcho: false,\n          } as SendToGroupMessage)\n          .callsFake((_) => Promise.resolve());\n        client.sendToGroup(\"groupName\", \"xyz\", \"text\", { ackId: 2233 });\n        mock.verify();\n      });\n    });\n\n    it(\"send to group without assigned ack id\", () => {\n      assert.doesNotThrow(() => {\n        const client = new WebPubSubClient(\"wss://service.com\");\n        const mock = sinon.mock(client);\n        mock\n          .expects(\"_sendMessage\")\n          .once()\n          .withArgs({\n            kind: \"sendToGroup\",\n            group: \"groupName\",\n            dataType: \"text\",\n            ackId: 1,\n            data: \"xyz\",\n            noEcho: false,\n          } as SendToGroupMessage)\n          .callsFake((_) => Promise.resolve());\n        client.sendToGroup(\"groupName\", \"xyz\", \"text\");\n        mock.verify();\n      });\n    });\n\n    it(\"send to group no echo\", () => {\n      assert.doesNotThrow(() => {\n        const client = new WebPubSubClient(\"wss://service.com\");\n        const mock = sinon.mock(client);\n        mock\n          .expects(\"_sendMessage\")\n          .once()\n          .withArgs({\n            kind: \"sendToGroup\",\n            group: \"groupName\",\n            dataType: \"text\",\n            ackId: 1,\n            data: \"xyz\",\n            noEcho: true,\n          } as SendToGroupMessage)\n          .callsFake((_) => Promise.resolve());\n        client.sendToGroup(\"groupName\", \"xyz\", \"text\", { noEcho: true });\n        mock.verify();\n      });\n    });\n\n    it(\"send event without assigned ack id\", () => {\n      assert.doesNotThrow(() => {\n        const client = new WebPubSubClient(\"wss://service.com\");\n        const mock = sinon.mock(client);\n        mock\n          .expects(\"_sendMessage\")\n          .once()\n          .withArgs({\n            kind: \"sendEvent\",\n            event: \"eventName\",\n            dataType: \"text\",\n            ackId: 1,\n            data: \"xyz\",\n          } as SendEventMessage)\n          .callsFake((_) => Promise.resolve());\n        client.sendEvent(\"eventName\", \"xyz\", \"text\");\n        mock.verify();\n      });\n    });\n\n    it(\"send event with assigned ack id\", () => {\n      assert.doesNotThrow(() => {\n        const client = new WebPubSubClient(\"wss://service.com\");\n        const mock = sinon.mock(client);\n        mock\n          .expects(\"_sendMessage\")\n          .once()\n          .withArgs({\n            kind: \"sendEvent\",\n            event: \"eventName\",\n            dataType: \"text\",\n            ackId: 12345,\n            data: \"xyz\",\n          } as SendEventMessage)\n          .callsFake((_) => Promise.resolve());\n        client.sendEvent(\"eventName\", \"xyz\", \"text\", { ackId: 12345 });\n        mock.verify();\n      });\n    });\n\n    it(\"send event fire and forget\", () => {\n      assert.doesNotThrow(() => {\n        const client = new WebPubSubClient(\"wss://service.com\");\n        const mock = sinon.mock(client);\n        mock\n          .expects(\"_sendMessage\")\n          .once()\n          .withArgs({\n            kind: \"sendEvent\",\n            event: \"eventName\",\n            dataType: \"text\",\n            data: \"xyz\",\n          } as SendEventMessage)\n          .callsFake((_) => Promise.resolve());\n        client.sendEvent(\"eventName\", \"xyz\", \"text\", {\n          fireAndForget: true,\n        });\n        mock.verify();\n      });\n    });\n  });\n\n  describe(\"Add handler to events\", () => {\n    it(\"add connected event\", () => {\n      const client = new WebPubSubClient(\"wss://service.com\");\n      const callback = sinon.spy();\n      client.on(\"connected\", callback);\n\n      client[\"_safeEmitConnected\"](\"connId\", \"user\");\n\n      assert.isTrue(\n        callback.calledWith({\n          connectionId: \"connId\",\n          userId: \"user\",\n        }),\n      );\n    });\n\n    it(\"add disconnected event without disconnectedMessage\", () => {\n      const client = new WebPubSubClient(\"wss://service.com\");\n      const callback = sinon.spy();\n      client.on(\"disconnected\", callback);\n\n      client[\"_safeEmitDisconnected\"](\"connId\", undefined);\n\n      assert.isTrue(\n        callback.calledWith({\n          connectionId: \"connId\",\n          message: undefined,\n        }),\n      );\n    });\n\n    it(\"add disconnected event\", () => {\n      const client = new WebPubSubClient(\"wss://service.com\");\n      const callback = sinon.spy();\n      client.on(\"disconnected\", callback);\n\n      client[\"_safeEmitDisconnected\"](\"connId\", {\n        kind: \"disconnected\",\n        message: \"internal server error\",\n      } as DisconnectedMessage);\n\n      assert.isTrue(\n        callback.calledWith({\n          connectionId: \"connId\",\n          message: {\n            kind: \"disconnected\",\n            message: \"internal server error\",\n          } as DisconnectedMessage,\n        }),\n      );\n    });\n\n    it(\"add group message event\", () => {\n      const client = new WebPubSubClient(\"wss://service.com\");\n      const callback = sinon.spy();\n      client.on(\"group-message\", callback);\n\n      client[\"_safeEmitGroupMessage\"]({\n        kind: \"groupData\",\n        group: \"groupName\",\n        dataType: \"text\",\n        data: \"xyz\",\n      } as GroupDataMessage);\n\n      assert.isTrue(\n        callback.calledWith({\n          message: { kind: \"groupData\", group: \"groupName\", dataType: \"text\", data: \"xyz\" },\n        }),\n      );\n    });\n\n    it(\"add server message event\", () => {\n      const client = new WebPubSubClient(\"wss://service.com\");\n      const callback = sinon.spy();\n      client.on(\"server-message\", callback);\n\n      client[\"_safeEmitServerMessage\"]({\n        kind: \"serverData\",\n        dataType: \"text\",\n        data: \"xyz\",\n      } as ServerDataMessage);\n\n      assert.isTrue(\n        callback.calledWith({\n          message: { kind: \"serverData\", dataType: \"text\", data: \"xyz\" },\n        }),\n      );\n    });\n\n    it(\"add stopped event\", () => {\n      const client = new WebPubSubClient(\"wss://service.com\");\n      const callback = sinon.spy();\n      client.on(\"stopped\", callback);\n\n      client[\"_safeEmitStopped\"]();\n\n      assert.isTrue(callback.calledWith());\n    });\n\n    it(\"add rejoin group failed event\", () => {\n      const client = new WebPubSubClient(\"wss://service.com\");\n      const callback = sinon.spy();\n      client.on(\"rejoin-group-failed\", callback);\n\n      const err = new Error(\"Some error\");\n      client[\"_safeEmitRejoinGroupFailed\"](\"groupName\", err);\n\n      assert.isTrue(\n        callback.calledWith({\n          group: \"groupName\",\n          error: err,\n        }),\n      );\n    });\n  });\n});\n"]}