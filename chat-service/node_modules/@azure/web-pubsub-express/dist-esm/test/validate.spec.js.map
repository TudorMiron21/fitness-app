{"version":3,"file":"validate.spec.js","sourceRoot":"","sources":["../../test/validate.spec.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable no-invalid-this */\nimport { CloudEventsDispatcher } from \"../src/cloudEventsDispatcher\";\nimport { assert } from \"chai\";\nimport { IncomingMessage, ServerResponse } from \"http\";\nimport { Socket } from \"net\";\n\ndescribe(\"Abuse protection works\", function () {\n  it(\"Only requests with valid header will be processed\", function () {\n    const req = new IncomingMessage(new Socket());\n    const res = new ServerResponse(req);\n    const dispatcher = new CloudEventsDispatcher(\"hub\");\n\n    const result = dispatcher.handlePreflight(req, res);\n    assert.isFalse(result);\n  });\n\n  it(\"When allow all endpoints return *\", function () {\n    const req = new IncomingMessage(new Socket());\n    req.headers[\"ce-awpsversion\"] = \"1.0\";\n    req.headers[\"webhook-request-origin\"] = \"a.com\";\n    const res = new ServerResponse(req);\n    const dispatcher = new CloudEventsDispatcher(\"hub\");\n\n    const result = dispatcher.handlePreflight(req, res);\n    assert.isTrue(result);\n    assert.equal(\"*\", res.getHeader(\"webhook-allowed-origin\"));\n  });\n\n  it(\"Support valid url in allowed endpoints and return them\", function () {\n    const req = new IncomingMessage(new Socket());\n    req.headers[\"ce-awpsversion\"] = \"1.0\";\n    req.headers[\"webhook-request-origin\"] = \"a.com\";\n    const res = new ServerResponse(req);\n    const dispatcher = new CloudEventsDispatcher(\"hub\", {\n      allowedEndpoints: [\"https://a.com/c\", \"http://b.com\"],\n    });\n\n    const result = dispatcher.handlePreflight(req, res);\n    assert.isTrue(result);\n    assert.sameMembers([\"a.com\", \"b.com\"], res.getHeader(\"webhook-allowed-origin\") as string[]);\n  });\n\n  it(\"Not allowed endpoints should return 200 and we reply on service to do the validation\", function () {\n    const req = new IncomingMessage(new Socket());\n    req.headers[\"ce-awpsversion\"] = \"1.0\";\n    req.headers[\"webhook-request-origin\"] = \"a.com\";\n    const res = new ServerResponse(req);\n    const dispatcher = new CloudEventsDispatcher(\"hub\", {\n      allowedEndpoints: [\"https://c.com/c\", \"http://b.com\"],\n    });\n\n    const result = dispatcher.handlePreflight(req, res);\n    assert.isTrue(result);\n    assert.sameMembers([\"c.com\", \"b.com\"], res.getHeader(\"webhook-allowed-origin\") as string[]);\n  });\n});\n"]}