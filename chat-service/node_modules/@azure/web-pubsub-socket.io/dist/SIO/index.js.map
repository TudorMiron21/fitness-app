{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/SIO/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  debugModule,\n  AzureSocketIOOptions,\n  AzureSocketIOCredentialOptions,\n  getSioMiddlewareFromExpress,\n  writeResponse,\n} from \"../common/utils\";\nimport { WebPubSubEioServer } from \"../EIO\";\nimport { WebPubSubAdapterProxy } from \"./components/web-pubsub-adapter\";\nimport { DEFAULT_SIO_PATH, FORBIDDEN_REQUEST_MESSAGE, WEB_PUBSUB_OPTIONS_PROPERY_NAME } from \"./components/constants\";\nimport { restoreClaims } from \"./components/negotiate\";\nimport * as SIO from \"socket.io\";\nimport { Adapter } from \"socket.io-adapter\";\nimport { IncomingMessage, ServerResponse } from \"http\";\n\nconst debug = debugModule(\"wps-sio-ext:SIO:index\");\ndebug(\"load\");\n\ndeclare type AdapterConstructor = typeof Adapter | ((nsp: SIO.Namespace) => Adapter);\n\nexport async function useAzureSocketIOChain(\n  this: SIO.Server,\n  webPubSubOptions: AzureSocketIOOptions | AzureSocketIOCredentialOptions\n): Promise<SIO.Server> {\n  debug(`useAzureSocketIOChain, webPubSubOptions: ${JSON.stringify(webPubSubOptions)}`);\n  const engine = new WebPubSubEioServer(this.engine.opts, webPubSubOptions);\n  const httpServer = this[\"httpServer\"];\n  engine.attach(httpServer, this[\"opts\"]);\n\n  // Add negotiate handler\n  debug(\"add negotiate handler\");\n  const path = this._opts.path || DEFAULT_SIO_PATH;\n\n  // current listeners = EIO handleRequest listeners (e.g. /socket.io) + other listeners from user\n  const listeners = httpServer.listeners(\"request\").slice(0);\n  httpServer.removeAllListeners(\"request\");\n\n  this[WEB_PUBSUB_OPTIONS_PROPERY_NAME] = webPubSubOptions;\n\n  httpServer.on(\"request\", (req: IncomingMessage, res: ServerResponse) => {\n    // Requests routing to EIO `handleRequest` listener should be forbidden. Other listeners should be handled as normal.\n    for (let i = 0; i < listeners.length; i++) {\n      // Follow the same logic as Engine.IO\n      // Reference: https://github.com/socketio/engine.io/blob/6.4.2/lib/server.ts#L804\n      if (path !== req.url.slice(0, path.length)) {\n        listeners[i].call(httpServer, req, res);\n      } else {\n        debug(`Forbidden request whose url ${req.url} starts with ${path}`);\n        writeResponse(res, 403, FORBIDDEN_REQUEST_MESSAGE, \"text/plain\");\n      }\n    }\n  });\n\n  // `attachServe` is a Socket.IO design which attachs static file serving to internal http server.\n  // Creating new engine makes previous `attachServe` execution invalid.\n  // Reference: https://github.com/socketio/socket.io/blob/4.6.2/lib/index.ts#L518\n  debug(\"serve static file\");\n  if (this[\"_serveClient\"]) {\n    this[\"attachServe\"](httpServer);\n  }\n\n  this.bind(engine);\n\n  debug(\"use webPubSub adatper\");\n  const adapterProxy = new WebPubSubAdapterProxy(\n    (this.engine as WebPubSubEioServer).webPubSubConnectionManager.service\n  );\n  this.adapter(adapterProxy as unknown as AdapterConstructor);\n\n  this.use(getSioMiddlewareFromExpress(restoreClaims()));\n\n  // If using tunnel, wait until connected. `engine.setup` does no nothing when using REST API.\n  await engine.setup();\n  return this;\n}\n\n/**\n * This method returns a Socket.IO server using Web PubSub for Socket.IO.\n *\n * @param io - the Socket.IO server instance\n * @param azureSocketIOOptions - the options of Web PubSub for Socket.IO\n * @returns a Socket.IO server instance using Web PubSub for Socket.IO\n *\n * @public\n */\nexport async function useAzureSocketIO(\n  io: SIO.Server,\n  azureSocketIOOptions: AzureSocketIOOptions | AzureSocketIOCredentialOptions\n): Promise<SIO.Server> {\n  debug(`useAzureSocketIO, azureSocketIOOptions: ${JSON.stringify(azureSocketIOOptions)}`);\n  return useAzureSocketIOChain.call(io, azureSocketIOOptions);\n}\n\nexport { WebPubSubAdapterProxy };\n"]}