{"version":3,"file":"web-pubsub-adapter.js","sourceRoot":"","sources":["../../../src/SIO/components/web-pubsub-adapter.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { debugModule, toOptionsString, toString } from \"../../common/utils\";\nimport { getSingleEioEncodedPayload } from \"./encoder\";\nimport { Packet as SioPacket, PacketType as SioPacketType, Decoder as SioDecoder } from \"socket.io-parser\";\nimport * as EioParser from \"engine.io-parser\";\nimport { Namespace, Server as SioServer } from \"socket.io\";\nimport { Adapter as NativeInMemoryAdapter, BroadcastOptions, Room, SocketId } from \"socket.io-adapter\";\nimport { WebPubSubServiceCaller } from \"../../serverProxies\";\nimport { Mutex, MutexInterface } from \"async-mutex\";\nimport base64url from \"base64url\";\nimport { TextDecoder } from \"util\";\n\nconst debug = debugModule(\"wps-sio-ext:SIO:Adapter\");\n\nconst GROUP_DELIMITER = \"~\";\n\n/**\n * Socket.IO Server uses method `io.Adapter(AdapterClass))` to set the adapter. `AdatperClass` is not an instansized object, but a class.\n * The actual adapter is instansized inside server logic.\n * Thus its constructor parameters of the adapter class is out of our control.\n * So a proxy class is necessary to wrap the adapter class for customimzed constructor parameters.\n * How to use:\n *  1. Instansize a `WebPubSubAdapterProxy` object: `const webPubSubAdapterProxy = new WebPubSubAdapterProxy(extraOptions);`\n *  2. Set the adapter: `io.adapter(WebPubSubAdapterProxy);`, thus additional options are controllable.\n */\nexport class WebPubSubAdapterProxy {\n  public serivce: WebPubSubServiceCaller;\n  public sioServer: SioServer;\n\n  constructor(serviceClient: WebPubSubServiceCaller) {\n    this.serivce = serviceClient;\n\n    const proxyHandler = {\n      construct: (target, args) => new target(...args, serviceClient),\n    };\n    return new Proxy(WebPubSubAdapterInternal, proxyHandler);\n  }\n}\n\nexport class WebPubSubAdapterInternal extends NativeInMemoryAdapter {\n  public service: WebPubSubServiceCaller;\n  private _roomOperationLock: Map<SocketId, Mutex> = new Map();\n  private _sioDecoder: SioDecoder;\n  private _utf8Decoder = new TextDecoder(\"utf-8\");\n\n  /**\n   * Azure Web PubSub Socket.IO Adapter constructor.\n   *\n   * @param nsp - Namespace\n   * @param extraArgForWpsAdapter - extra argument for WebPubSubAdapter\n   */\n  constructor(readonly nsp: Namespace, serviceClient: WebPubSubServiceCaller) {\n    debug(`constructor nsp.name = ${nsp.name}, serviceClient = ${serviceClient}`);\n    super(nsp);\n    this.service = serviceClient;\n    this._sioDecoder = new SioDecoder();\n  }\n\n  /**\n   * Broadcasts a packet.\n   *\n   * @param packet - the packet object\n   * @param opts - the options\n   */\n  public override async broadcast(packet: SioPacket, opts: BroadcastOptions): Promise<void> {\n    debug(`broadcast, start, packet = ${JSON.stringify(packet)},\\\nopts = ${toOptionsString(opts)}, namespace = \"${this.nsp.name}\"`);\n    try {\n      packet.nsp = this.nsp.name;\n\n      // Although here's a await, but this method actually return in sync\n      const encodedPayload = await getSingleEioEncodedPayload(packet);\n\n      // optimize\n      if (opts.rooms.size === 1) {\n        const oDataFilter = this._buildODataFilterForExceptsOnly(opts.except);\n        const sendOptions = { filter: oDataFilter, contentType: \"text/plain\" };\n        debug(`broadcast, encodedPayload = \"${encodedPayload}\", sendOptions = \"${JSON.stringify(sendOptions)}\"`);\n        const encodedGroupName = this._getGroupName(this.nsp.name, opts.rooms.values().next().value);\n        await this.service.group(encodedGroupName).sendToAll(encodedPayload, sendOptions);\n        debug(`broadcast, finish`);\n      } else {\n        const oDataFilter = this._buildODataFilter(opts.rooms, opts.except);\n        const sendOptions = { filter: oDataFilter, contentType: \"text/plain\" };\n        debug(`broadcast, encodedPayload = \"${encodedPayload}\", sendOptions = \"${JSON.stringify(sendOptions)}\"`);\n        await this.service.sendToAll(encodedPayload, sendOptions);\n        debug(`broadcast, finish`);\n      }\n    } catch (e) {\n      debug(`broadcast, error, packet = ${JSON.stringify(packet)},\\\nopts = ${toOptionsString(opts)}, namespace = \"${this.nsp.name}\", error = ${e}`);\n    }\n  }\n\n  /**\n   * Makes the matching socket instances join the specified rooms\n   *\n   * @param opts - the filters to apply\n   * @param rooms - the rooms to join\n   */\n  public async addSockets(opts: BroadcastOptions, rooms: Room[]): Promise<void> {\n    debug(`addSockets, start, rooms = ${toString(rooms)}, opts = ${toOptionsString(opts)}`);\n    try {\n      const oDataFilter = this._buildODataFilter(opts.rooms, opts.except);\n      const groupNames = Array.from(rooms).map((room) => this._getGroupName(this.nsp.name, room));\n      await this.service.addConnectionsToGroups(groupNames, oDataFilter);\n      debug(`addSockets, call API addConnectionsToGroups, finish, \\\nrooms = ${toString(rooms)}, opts = ${toOptionsString(opts)}`);\n      super.addSockets(opts, rooms);\n    } catch (e) {\n      debug(`addSockets, error, rooms = ${toString(rooms)}, opts = ${toOptionsString(opts)}, \\\nerror.message = ${e.message}, error = ${e}`);\n    }\n  }\n\n  /**\n   * Adds a socket to a list of room.\n   *\n   * @param id - the socket id\n   * @param rooms - a set of rooms\n   */\n  public async addAll(id: SocketId, rooms: Set<Room>): Promise<void> {\n    debug(`addAll, start, id = ${id}, rooms = ${toString(rooms)}}`);\n    const release = await this._getLock(id);\n    try {\n      const eioSid = this._getEioSid(id);\n      const connectionFilter = `connectionId eq '${eioSid}'`;\n      const groupNames = Array.from(rooms).map((room) => this._getGroupName(this.nsp.name, room));\n\n      debug(`addAll, connectionFilter = \"${connectionFilter}\", groupNames = \"${toString(groupNames)}\"`);\n      await this.service.addConnectionsToGroups(groupNames, connectionFilter);\n\n      debug(`addAll, call API AddConnectionsToGroups, finish, \\\ngroupNames = ${toString(rooms)}, connectionId(eioSid) = ${this._getEioSid(id)}`);\n      super.addAll(id, rooms);\n    } catch (e) {\n      debug(`addAll, error, SocketId = ${id}, rooms = ${toString(rooms)}, error = ${e}`);\n    } finally {\n      release();\n    }\n    debug(`addAll, finish, SocketId = ${id}, rooms = ${toString(rooms)}, id.rooms = ${toString(this.sids.get(id))}`);\n  }\n\n  /**\n   * Removes a socket from a room.\n   *\n   * @param id - the socket id\n   * @param room - the room name\n   */\n  public async del(id: SocketId, room: Room): Promise<void> {\n    debug(`del, start, id = ${id}, room = ${room}`);\n    const release = await this._getLock(id);\n    try {\n      const eioSid = this._getEioSid(id);\n      const groupName = this._getGroupName(this.nsp.name, room);\n\n      await this.service.group(groupName).removeConnection(eioSid);\n\n      debug(\n        `del, call API RemoveConnectionFromGroup, finish, groupName = ${groupName}, connectionId(eioSid) = ${eioSid}`\n      );\n      super.del(id, room);\n    } catch (e) {\n      debug(`del, error, SocketId = ${id}, room = ${room}, error = ${e}`);\n    } finally {\n      release();\n    }\n    debug(`del, finish, SocketId = ${id}, room = ${room}, id.rooms = ${toString(this.sids.get(id))}`);\n  }\n\n  /**\n   * Removes a socket from all rooms it's joined.\n   *\n   * @param id - the socket id\n   */\n  public async delAll(id: SocketId): Promise<void> {\n    debug(`delAll, start, id = ${id}`);\n    const release = await this._getLock(id);\n    debug(`delAll, lock acquired`);\n    try {\n      // send disconnect packet to socketio connection by leveraging private room whose name == sid\n      const packet: SioPacket = { type: SioPacketType.DISCONNECT } as SioPacket;\n      const opts: BroadcastOptions = { rooms: new Set([id]) } as BroadcastOptions;\n      debug(`delAll, call adapter.broadcast`);\n\n      await this.broadcast(packet, opts);\n\n      super.delAll(id);\n    } catch (e) {\n      debug(`delAll, error, SocketId = ${id}, error = ${e}`);\n    } finally {\n      release();\n    }\n    debug(`delAll, finish, SocketId = ${id}, id.rooms = ${toString(this.sids.get(id))}`);\n  }\n\n  /**\n   * Broadcasts a packet and expects multiple acknowledgements.\n   *\n   * @param packet - the packet object\n   * @param opts - the options\n   * @param clientCountCallback - the number of clients that received the packet\n   * @param ack - the callback that will be called for each client response\n   */\n  public async broadcastWithAck(\n    packet: SioPacket,\n    opts: BroadcastOptions,\n    clientCountCallback: (clientCount: number) => void,\n    ack: (...args: unknown[]) => void\n  ): Promise<void> {\n    debug(`broadcastWithAck, start, packet = ${JSON.stringify(packet)},\\\n  opts = ${toOptionsString(opts)}, namespace = \"${this.nsp.name}\"`);\n\n    let accumulatedData = \"\";\n    let count = 0;\n\n    const streamHandleResponse = (chunk: string) => {\n      const handleJsonLines = (lines: string[], onPacket: (SioPacket) => void) => {\n        /**\n         * Line 1: {xxx}\n         * Line 2: {xxx}\n         * ..\n         * Line N: {xx   // maybe not complete\n         */\n        for (let i = 0; i < lines.length - 1; i++) {\n          if (lines[i]) {\n            const emitWithAckResponse = JSON.parse(lines[i]);\n            // The payload is UTF-8 encoded EIO payload, we need to decode it and only ack the data\n            const eioPackets = EioParser.decodePayload(emitWithAckResponse.Payload);\n            this._sioDecoder.on(\"decoded\", (packet: SioPacket) => onPacket(packet));\n            eioPackets.forEach((element) => {\n              this._sioDecoder.add(element.data);\n            });\n            this._sioDecoder.off(\"decoded\");\n          }\n        }\n      };\n\n      accumulatedData += chunk.toString();\n      const lines = accumulatedData.split(\"\\n\");\n      handleJsonLines(lines, (packet: SioPacket) => {\n        ack(...packet.data);\n        count++;\n      });\n      accumulatedData = lines[lines.length - 1];\n    };\n\n    const bodyHandler = (value: Uint8Array | undefined, end: boolean) => {\n      if (value) {\n        const text = this._utf8Decoder.decode(value);\n        streamHandleResponse(text);\n      }\n      if (end) {\n        clientCountCallback(count);\n        return;\n      }\n    };\n\n    try {\n      packet.nsp = this.nsp.name;\n      const encodedPayload = await getSingleEioEncodedPayload(packet);\n      const oDataFilter = this._buildODataFilter(opts.rooms, opts.except);\n\n      await this.service.invoke(encodedPayload, bodyHandler, { filter: oDataFilter, contentType: \"text/plain\" });\n\n      debug(`broadcastWithAck, finish`);\n    } catch (e) {\n      debug(`broadcastWithAck, error, packet = ${JSON.stringify(packet)},\\\nopts = ${toOptionsString(opts)}, namespace = \"${this.nsp.name}, error = ${e}\"`);\n    }\n  }\n\n  /**\n   * Gets a list of sockets by sid.\n   *\n   * @param _rooms - the explicit set of rooms to check.\n   */\n  public sockets(_rooms: Set<Room>): Promise<Set<SocketId>> {\n    throw new Error(`'sockets' is not supported.`);\n  }\n\n  /**\n   * Gets the list of rooms a given socket has joined.\n   *\n   * @param id - the socket id\n   */\n  public socketRooms(id: SocketId): Set<Room> | undefined {\n    debug(`socketRooms, start, id = ${id}`);\n    // Follow the same handling logic as RedisAdapter. Though it's incorrect strictly for multiple server condition.\n    const ret = super.socketRooms(id);\n    debug(`socketRooms, finish, id = ${id} ${toString(ret)}`);\n    return ret;\n  }\n\n  /**\n   * Returns the matching socket instances\n   *\n   * @param opts - the filters to apply\n   */\n  public fetchSockets(opts: BroadcastOptions): Promise<unknown[]> {\n    debug(`fetchSockets, start, opts = ${toOptionsString(opts)}`);\n    if (opts.flags.local) {\n      return super.fetchSockets(opts);\n    } else {\n      throw new Error(`'fetchSockets' without local flag is not supported`);\n    }\n  }\n\n  /**\n   * Makes the matching socket instances leave the specified rooms\n   *\n   * @param opts - the filters to apply\n   * @param rooms - the rooms to leave\n   */\n  public async delSockets(opts: BroadcastOptions, rooms: Room[]): Promise<void> {\n    debug(`delSockets, start, rooms = ${toString(rooms)}, opts = ${toOptionsString(opts)}`);\n    try {\n      const oDataFilter = this._buildODataFilter(opts.rooms, opts.except);\n      const groupNames = Array.from(rooms).map((room) => this._getGroupName(this.nsp.name, room));\n      await this.service.removeConnectionsFromGroups(groupNames, oDataFilter);\n      debug(`delSockets, call API removeConnectionsFromGroups, finish, \\\nrooms = ${toString(rooms)}, opts = ${toOptionsString(opts)}`);\n      super.delSockets(opts, rooms);\n    } catch (e) {\n      debug(`delSockets, error, rooms = ${toString(rooms)}, \\\nopts = ${toOptionsString(opts)}, error = ${e}`);\n    }\n  }\n\n  /**\n   * Send a packet to the other Socket.IO servers in the cluster\n   * @param _packet - an array of arguments, which may include an acknowledgement callback at the end\n   */\n  public override serverSideEmit(_packet: unknown[]): void {\n    throw new Error(`'serverSideEmit' is not supported.`);\n  }\n\n  /**\n   * Makes the matching socket instances disconnect\n   *\n   * @param opts - the filters to apply\n   * @param close - whether to close the underlying connection\n   */\n  public async disconnectSockets(opts: BroadcastOptions, close: boolean): Promise<void> {\n    debug(`disconnectSockets, start, opts = ${toOptionsString(opts)}, close = ${close}`);\n    await this.broadcast(\n      { type: SioPacketType.DISCONNECT, nsp: this.nsp.name, data: { close: close } } as SioPacket,\n      opts\n    );\n    /**\n     * Server should not call Socket.disconnect(close) for each socket as `super.disconnectSockets` does.\n     * Server should wait for EIO CLOSE packet or SIO DISCONNECT packet sent from service.\n     */\n    debug(`disconnectSockets, finish, opts = ${toOptionsString(opts)}, close = ${close}`);\n  }\n\n  /**\n   * Generates OData filter string for Web PubSub service from a set of rooms and a set of exceptions\n   * @param rooms - a set of Rooms to include\n   * @param excepts - a set of Rooms to exclude\n   * @returns OData - filter string\n   */\n  private _buildODataFilter(rooms: Set<string>, excepts?: Set<string> | undefined): string {\n    debug(\"_buildODataFilter\");\n    let allowFilter = \"\";\n    let room_idx = 0,\n      except_idx = 0;\n\n    if (rooms.size === 0) rooms = new Set([\"\"]);\n    for (const room of rooms) {\n      const groupName = this._getGroupName(this.nsp.name, room);\n      allowFilter += `'${groupName}' in groups` + (room_idx === rooms.size - 1 ? \"\" : \" or \");\n      room_idx++;\n    }\n\n    let denyFilter = \"\";\n    if (excepts) {\n      for (const except of excepts) {\n        const exceptGroupName = this._getGroupName(this.nsp.name, except);\n        denyFilter += `not ('${exceptGroupName}' in groups)` + (except_idx === excepts.size - 1 ? \"\" : \" and \");\n        except_idx++;\n      }\n    }\n\n    let result = \"\";\n    if (allowFilter.length > 0) {\n      result = allowFilter + (denyFilter.length > 0 ? \" and \" + denyFilter : \"\");\n    } else result = denyFilter.length > 0 ? `${denyFilter}` : \"\";\n    debug(`_buildODataFilter result = ${result}`);\n    return result;\n  }\n\n  /**\n   * Generates OData filter string for Web PubSub service from a set of exceptions\n   * @param excepts - a set of Rooms to exclude\n   * @returns OData - filter string\n   */\n  private _buildODataFilterForExceptsOnly(excepts?: Set<string> | undefined): string {\n    debug(\"_buildODataFilterForExceptsOnly\");\n    let except_idx = 0;\n\n    let denyFilter = \"\";\n    if (excepts) {\n      for (const except of excepts) {\n        const exceptGroupName = this._getGroupName(this.nsp.name, except);\n        denyFilter += `not ('${exceptGroupName}' in groups)` + (except_idx === excepts.size - 1 ? \"\" : \" and \");\n        except_idx++;\n      }\n    }\n\n    debug(`_buildODataFilterForExceptsOnly result = ${denyFilter}`);\n    return denyFilter;\n  }\n\n  private _getEioSid(sioSid: string): string {\n    debug(`Get EIO socket, id = \"${sioSid}\", nsp.sockets = ${toString(this.nsp.sockets.keys())}`);\n    return this.nsp.sockets.get(sioSid).conn[\"id\"];\n  }\n\n  /**\n   * `namespace` and `room` are concpets from Socket.IO.\n   * `group` is a concept from Azure Web PubSub.\n   */\n  private _getGroupName(namespace: string, room?: string): string {\n    let ret = `0${GROUP_DELIMITER}${base64url(namespace)}${GROUP_DELIMITER}`;\n    if (room && room.length > 0) {\n      ret += base64url(room);\n    }\n    debug(`convert (ns=\"${namespace}\", room=\"${room}\") => groupName = \"${ret}\"`);\n    return ret;\n  }\n\n  private async _getLock(id: SocketId): Promise<MutexInterface.Releaser> {\n    debug(`_getLock, start, id = ${id}`);\n\n    if (!this._roomOperationLock.has(id)) {\n      this._roomOperationLock.set(id, new Mutex());\n    }\n    const lock = this._roomOperationLock.get(id);\n    const release = await lock.acquire();\n\n    debug(`_getLock, finish, id = ${id}`);\n    return release;\n  }\n}\n"]}