{"version":3,"file":"hubs.spec.js","sourceRoot":"","sources":["../../test/hubs.spec.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable no-invalid-this */\nimport { Recorder, isLiveMode, assertEnvironmentVariable } from \"@azure-tools/test-recorder\";\nimport { WebPubSubServiceClient, AzureKeyCredential } from \"../src\";\nimport { assert } from \"@azure/test-utils\";\nimport recorderOptions from \"./testEnv\";\nimport { FullOperationResponse } from \"@azure/core-client\";\nimport { createTestCredential } from \"@azure-tools/test-credential\";\n/* eslint-disable @typescript-eslint/no-invalid-this */\n\ndescribe(\"HubClient\", function () {\n  describe(\"Constructing a HubClient\", () => {\n    const credential = createTestCredential();\n    it(\"takes a connection string, hub name, and options\", () => {\n      assert.doesNotThrow(() => {\n        new WebPubSubServiceClient(assertEnvironmentVariable(\"WPS_CONNECTION_STRING\"), \"test-hub\", {\n          retryOptions: { maxRetries: 2 },\n        });\n      });\n    });\n\n    it(\"takes an endpoint, an API key, a hub name, and options\", () => {\n      assert.doesNotThrow(() => {\n        new WebPubSubServiceClient(\n          assertEnvironmentVariable(\"WPS_ENDPOINT\"),\n          new AzureKeyCredential(assertEnvironmentVariable(\"WPS_API_KEY\")),\n          \"test-hub\",\n          {\n            retryOptions: { maxRetries: 2 },\n          }\n        );\n      });\n    });\n\n    it(\"takes an endpoint, DefaultAzureCredential, a hub name, and options\", () => {\n      assert.doesNotThrow(() => {\n        new WebPubSubServiceClient(\n          assertEnvironmentVariable(\"WPS_ENDPOINT\"),\n          credential,\n          \"test-hub\",\n          {\n            retryOptions: { maxRetries: 2 },\n          }\n        );\n      });\n    });\n  });\n\n  describe(\"Working with a hub\", function () {\n    let recorder: Recorder;\n    let client: WebPubSubServiceClient;\n    let lastResponse: FullOperationResponse | undefined;\n    const credential = createTestCredential();\n    function onResponse(response: FullOperationResponse) {\n      lastResponse = response;\n    }\n    beforeEach(async function () {\n      recorder = new Recorder(this.currentTest);\n      await recorder.start(recorderOptions);\n\n      client = new WebPubSubServiceClient(\n        assertEnvironmentVariable(\"WPS_CONNECTION_STRING\"),\n        \"simplechat\",\n        recorder.configureClientOptions({})\n      );\n    });\n\n    afterEach(async function () {\n      await recorder.stop();\n    });\n\n    it(\"can broadcast\", async () => {\n      await client.sendToAll(\"hello\", { contentType: \"text/plain\", onResponse });\n      assert.equal(lastResponse?.status, 202);\n\n      await client.sendToAll({ x: 1, y: 2 }, { onResponse });\n      assert.equal(lastResponse?.status, 202);\n\n      const binaryMessage = new Uint8Array(10);\n      await client.sendToAll(binaryMessage.buffer, { onResponse });\n      assert.equal(lastResponse?.status, 202);\n    });\n\n    it(\"can broadcast with filter\", async () => {\n      await client.sendToAll(\"hello\", {\n        contentType: \"text/plain\",\n        filter: \"userId ne 'user1'\",\n        onResponse,\n      });\n      assert.equal(lastResponse?.status, 202);\n\n      let error;\n      try {\n        await client.sendToAll(\"hello\", {\n          contentType: \"text/plain\",\n          filter: \"invalid filter\",\n        });\n      } catch (e: any) {\n        if (e.name !== \"RestError\") {\n          throw e;\n        }\n\n        error = e;\n      }\n      assert.equal(error.statusCode, 400);\n      assert.equal(\n        JSON.parse(error.message).message,\n        \"Invalid syntax for 'invalid filter': Syntax error at position 14 in 'invalid filter'. (Parameter 'filter')\"\n      );\n    });\n\n    it(\"can broadcast using the DAC\", async () => {\n      const dacClient = new WebPubSubServiceClient(\n        assertEnvironmentVariable(\"WPS_ENDPOINT\"),\n        credential,\n        \"simplechat\",\n        recorder.configureClientOptions({})\n      );\n\n      await dacClient.sendToAll(\"hello\", { contentType: \"text/plain\", onResponse });\n      assert.equal(lastResponse?.status, 202);\n\n      await dacClient.sendToAll({ x: 1, y: 2 }, { onResponse });\n      assert.equal(lastResponse?.status, 202);\n\n      const binaryMessage = new Uint8Array(10);\n      await dacClient.sendToAll(binaryMessage.buffer, { onResponse });\n      assert.equal(lastResponse?.status, 202);\n    });\n\n    it(\"can broadcast using APIM\", async () => {\n      const apimClient = new WebPubSubServiceClient(\n        assertEnvironmentVariable(\"WPS_CONNECTION_STRING\"),\n        \"simplechat\",\n        recorder.configureClientOptions({\n          reverseProxyEndpoint: assertEnvironmentVariable(\"WPS_REVERSE_PROXY_ENDPOINT\"),\n        })\n      );\n\n      await apimClient.sendToAll(\"hello\", { contentType: \"text/plain\", onResponse });\n      assert.equal(lastResponse?.status, 202);\n\n      await apimClient.sendToAll({ x: 1, y: 2 }, { onResponse });\n      assert.equal(lastResponse?.status, 202);\n\n      const binaryMessage = new Uint8Array(10);\n      await apimClient.sendToAll(binaryMessage.buffer, { onResponse });\n      assert.equal(lastResponse?.status, 202);\n    });\n\n    it(\"can send messages to a user\", async () => {\n      await client.sendToUser(\"brian\", \"hello\", {\n        contentType: \"text/plain\",\n        onResponse,\n      });\n      assert.equal(lastResponse?.status, 202);\n\n      await client.sendToUser(\"brian\", { x: 1, y: 2 }, { onResponse });\n      assert.equal(lastResponse?.status, 202);\n\n      const binaryMessage = new Uint8Array(10);\n      await client.sendToUser(\"brian\", binaryMessage.buffer, { onResponse });\n      assert.equal(lastResponse?.status, 202);\n    });\n\n    it(\"can send to a user with filter\", async () => {\n      await client.sendToUser(\"vic\", \"hello\", {\n        contentType: \"text/plain\",\n        filter: \"userId ne 'user1'\",\n        onResponse,\n      });\n      assert.equal(lastResponse?.status, 202);\n\n      let error;\n      try {\n        await client.sendToUser(\"brian\", \"hello\", {\n          contentType: \"text/plain\",\n          filter: \"invalid filter\",\n        });\n      } catch (e: any) {\n        if (e.name !== \"RestError\") {\n          throw e;\n        }\n\n        error = e;\n      }\n      assert.equal(error.statusCode, 400);\n      assert.equal(\n        JSON.parse(error.message).message,\n        \"Invalid syntax for 'invalid filter': Syntax error at position 14 in 'invalid filter'. (Parameter 'filter')\"\n      );\n    });\n\n    it(\"can send messages to a connection\", async () => {\n      await client.sendToConnection(\"xxxx\", \"hello\", { contentType: \"text/plain\", onResponse });\n      assert.equal(lastResponse?.status, 202);\n\n      await client.sendToConnection(\"xxxx\", { x: 1, y: 2 }, { onResponse });\n      assert.equal(lastResponse?.status, 202);\n      const binaryMessage = new Uint8Array(10);\n\n      await client.sendToConnection(\"xxxx\", binaryMessage.buffer, { onResponse });\n      assert.equal(lastResponse?.status, 202);\n    });\n\n    it(\"can manage users\", async () => {\n      const res = await client.userExists(\"foo\");\n      assert.ok(!res);\n      await client.removeUserFromAllGroups(\"brian\", { onResponse });\n      assert.equal(lastResponse?.status, 204);\n    });\n\n    it(\"can manage connections\", async () => {\n      await client.removeConnectionFromAllGroups(\"xxx\", { onResponse });\n      assert.equal(lastResponse?.status, 204);\n    });\n\n    it(\"can check if a connection exists\", async function () {\n      // likely bug in recorder for this test - recording not generating properly\n      if (!isLiveMode()) this.skip();\n      const res = await client.connectionExists(\"xxx\");\n      assert.ok(!res);\n    });\n\n    it(\"can grant permissions to connections\", async () => {\n      let error;\n      try {\n        await client.grantPermission(\"xxx\", \"joinLeaveGroup\", { targetName: \"x\" });\n      } catch (e: any) {\n        if (e.name !== \"RestError\") {\n          throw e;\n        }\n\n        error = e;\n      }\n      // grantPermission validates connection ids, so we expect an error here.\n      assert.equal(error.statusCode, 404);\n    });\n\n    it(\"can revoke permissions from connections\", async function () {\n      // likely bug in recorder for this test - recording not generating properly\n      if (!isLiveMode()) this.skip();\n      await client.revokePermission(\"invalid-id\", \"joinLeaveGroup\", { targetName: \"x\" });\n      // Service doesn't throw error for invalid connection-ids\n    });\n\n    it(\"can trace through the various options\", async function () {\n      await assert.supportsTracing(\n        async (options) => {\n          const promises: Promise<any>[] = [\n            client.sendToAll(\"hello\", { contentType: \"text/plain\", onResponse, ...options }),\n            client.sendToUser(\"brian\", \"hello\", {\n              contentType: \"text/plain\",\n              onResponse,\n              ...options,\n            }),\n            client.sendToConnection(\"xxxx\", \"hello\", {\n              contentType: \"text/plain\",\n              onResponse,\n              ...options,\n            }),\n            client.connectionExists(\"xxxx\", options),\n            client.closeConnection(\"xxxx\", options),\n            client.closeAllConnections(options),\n            client.closeUserConnections(\"xxxx\", options),\n            client.removeUserFromAllGroups(\"foo\", options),\n            client.groupExists(\"foo\", options),\n            client.userExists(\"foo\", options),\n            client.grantPermission(\"xxxx\", \"joinLeaveGroup\", { targetName: \"x\", ...options }),\n            client.hasPermission(\"xxxx\", \"joinLeaveGroup\", { targetName: \"x\", ...options }),\n            client.revokePermission(\"xxxx\", \"joinLeaveGroup\", options),\n            client.getClientAccessToken(options),\n          ];\n          // We don't care about errors, only that we created (and closed) the appropriate spans.\n          await Promise.all(promises.map((p) => p.catch(() => undefined)));\n        },\n        [\n          \"WebPubSubServiceClient.sendToAll\",\n          \"WebPubSubServiceClient.sendToUser\",\n          \"WebPubSubServiceClient.sendToConnection\",\n          \"WebPubSubServiceClient.connectionExists\",\n          \"WebPubSubServiceClient.closeConnection\",\n          \"WebPubSubServiceClient.closeAllConnections\",\n          \"WebPubSubServiceClient.closeUserConnections\",\n          \"WebPubSubServiceClient.removeUserFromAllGroups\",\n          \"WebPubSubServiceClient.groupExists\",\n          \"WebPubSubServiceClient.userExists\",\n          \"WebPubSubServiceClient.grantPermission\",\n          \"WebPubSubServiceClient.hasPermission\",\n          \"WebPubSubServiceClient.revokePermission\",\n          \"WebPubSubServiceClient.getClientAccessToken\",\n        ]\n      );\n    });\n\n    it(\"can generate client tokens\", async () => {\n      const res = await client.getClientAccessToken({\n        userId: \"brian\",\n        groups: [\"group1\"],\n      });\n      const url = new URL(res.url);\n      assert.ok(url.searchParams.has(\"access_token\"));\n      assert.equal(url.host, new URL(client.endpoint).host);\n      assert.equal(url.pathname, `/client/hubs/${client.hubName}`);\n    });\n  });\n});\n"]}