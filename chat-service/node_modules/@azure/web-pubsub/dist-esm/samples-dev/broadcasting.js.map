{"version":3,"file":"broadcasting.js","sourceRoot":"","sources":["../../samples-dev/broadcasting.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC;;GAEG;AAEH,OAAO,EAAE,sBAAsB,EAAE,MAAM,mBAAmB,CAAC;AAE3D,OAAO,KAAK,MAAM,MAAM,QAAQ,CAAC;AACjC,MAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,MAAM,OAAO,GAAG,IAAI,sBAAsB,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAsB,EAAE,MAAM,CAAC,CAAC;AAEvF,KAAK,UAAU,IAAI;IACjB,wCAAwC;IACxC,MAAM,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IAErC,4CAA4C;IAC5C,MAAM,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC1C,MAAM,UAAU,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;IAEzC,qCAAqC;IACrC,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;IAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;QAC3B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACb;IACD,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjC,CAAC;AAED,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAC;IAChD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * @summary Demonstrates broadcasting messages to a hub and a group\n */\n\nimport { WebPubSubServiceClient } from \"@azure/web-pubsub\";\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\nconst chatHub = new WebPubSubServiceClient(process.env.WPS_CONNECTION_STRING!, \"chat\");\n\nasync function main() {\n  // send a text message to the entire hub\n  await chatHub.sendToAll(\"Hi there!\");\n\n  // send a text message to a particular group\n  const adminGroup = chatHub.group(\"admin\");\n  await adminGroup.sendToAll(\"Hi admins!\");\n\n  // send binary data to the entire hub\n  const data = new Uint8Array(10);\n  for (let i = 0; i < 10; i++) {\n    data[i] = i;\n  }\n  chatHub.sendToAll(data.buffer);\n}\n\nmain().catch((e) => {\n  console.error(\"Sample encountered an error\", e);\n  process.exit(1);\n});\n"]}